<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
	<project basedir="." default="all" name="MGL7460-Projet_1" xmlns:sonar="antlib:org.sonar.ant">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <property name="sonar.host.url" value="http://ptitcaillou.tk:9000"/>
  	<property name="sonar.projectKey" value="org.sonarqube:sonarqube-scanner-ant" />
  	<property name="sonar.projectName" value="SonarScanner for Project nÂ°1" />
  	<property name="sonar.projectVersion" value="1.0" />
  	<property name="sonar.sources" value="src" />
  	<property name="sonar.java.binaries" value="./src" />
  	<property name="sonar.java.libraries" value="./ant_lib/sonarqube-ant-task-2.7.0.1612.jar" />
	<property name="spotbugs.home" value="./spotbugs-4.1.3" />
    
	<path id="MGL7460-Projet_1.classpath">
        <pathelement location="bin"/>
    </path>
		
	<path id="test.classpath">
	    <pathelement path="bin/test"/>
	    <pathelement path="bin/connectfour"/>
		<pathelement path="${ant.library.dir}\ant-junitlauncher.jar"/>
		<fileset dir="ant_lib/junit"/>
    </path>

    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="./ant_lib/checkstyle/checkstyle-8.36.2-all.jar"/>
    <taskdef resource="edu/umd/cs/findbugs/anttask/tasks.properties" classpath="./ant_lib/spotbugs-ant.jar"/>
  	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
  	    <classpath>
  	        <fileset dir="./ant_lib/pmd/pmd_lib">
  	            <include name="*.jar"/>
  	        </fileset>
  	    </classpath>
  	</taskdef>
		
  	<target name="sonar">
  	    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
  	        <classpath path="./ant_lib/sonarqube-ant-task-2.7.0.1612.jar" />
  	    </taskdef>
  	    <sonar:sonar />
  	</target>
		
    <target name="init">
        <mkdir dir="bin"/>
    	<mkdir dir="build/logs/tests_reports"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
		
    <target name="clean">
    	<tstamp>
			<format property="TODAY_DATE" pattern="yyyyMMdd-HHmmss"  locale="fr,FR" />
		</tstamp>
        <mkdir dir="build/archives"/>
    	<zip destfile="./build/archives/${TODAY_DATE}.zip">
    		<fileset dir="./build" includes="logs/*.xml" />
    	</zip>
        <delete dir="bin"/>
    	<delete dir="build/logs"/>
    	<delete>
    		<fileset dir="./build" includes="*.xml" />
    	</delete>
    </target>
		
    <target name="compile" depends="init">
        <echo message="${ant.project.name}: ${ant.file}"/>
  	  	<javac destdir="bin" srcdir="src/connectfour" includeantruntime="false"/>
    	<javac destdir="bin" classpathref="test.classpath" srcdir="src/test" includeantruntime="false"/>
    </target>
		
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
		
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
		
	<target name="pmd">
		<pmd rulesetfiles="./ant_lib/pmd/quickstart.xml" shortFilenames="true">
		 	<formatter type="xml" toFile="./build/logs/pmd_report.xml"/>
	        <fileset dir="src" includes="**/*.java"/>
		</pmd>
	</target>
	
	<target name="checkstyle">
		<checkstyle config="./ant_lib/checkstyle/google_checks.xml">
			<fileset dir="src" includes="**/*.java"/>
			<formatter type="xml" toFile="./build/logs/checkstyle_report.xml"/>
		</checkstyle>
	</target>
		
	<target name="jar" depends="compile">
		<jar destfile="./bin/ConnectFour.jar" filesetmanifest="mergewithoutmain">
		 	<manifest>
		 		<attribute name="Main-Class" value="connectfour.App"/>
		 		<attribute name="Class-Path" value="."/>
		  	</manifest>
		  	<fileset dir="./bin"/>
  		</jar>
	</target>
		
	<target name="spotbugs" depends="jar">
		<spotbugs 	home="${spotbugs.home}"
					output="xml"
					outputfile="./build/logs/spotbugs_report.xml"
		>
		<class location="./bin/ConnectFour.jar"/>
		<sourcepath path="./src/connectfour"/>
		</spotbugs>
	</target>
		
	<target name="junit" depends="compile">
		<junitlauncher haltOnFailure="true" printSummary="true">
			<classpath refid="test.classpath"/>
			<testclasses outputdir="build/logs/tests_reports">
                <fileset dir="bin/test">
                    <include name="**/*Test.class"/>
                </fileset>
                <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
                <listener type="legacy-plain" sendSysOut="true" />
            </testclasses>
		</junitlauncher>
	</target>
		
  	<target name="sonar-ci">
  	    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
  	        <classpath path="./ant_lib/sonarqube-ant-task-2.7.0.1612.jar" />
  	    </taskdef>
  	    <sonar:sonar />
  	</target>
		
    <target name="init-ci">
    	<mkdir dir="bin"/>
    	<mkdir dir="build/logs/tests_reports"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
		
    <target name="clean-ci">
        <delete dir="bin"/>
    	<delete dir="build"/>
    </target>
		
	<target name="compile-ci" depends="init-ci">
        <echo message="${ant.project.name}: ${ant.file}"/>
  	  	<javac destdir="bin" srcdir="src/connectfour" includeantruntime="false"/>
    	<javac destdir="bin" classpathref="test.classpath" srcdir="src/test" includeantruntime="false"/>
	</target>
		
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects-ci"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler-ci">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
		
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler-ci">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
		
	<target name="pmd-ci">
		<pmd rulesetfiles="./ant_lib/pmd/quickstart.xml" shortFilenames="true">
		 	<formatter type="xml" toFile="./build/logs/pmd_report.xml"/>
	        <fileset dir="src" includes="**/*.java"/>
		</pmd>
	</target>
	
	<target name="checkstyle-ci">
		<checkstyle config="./ant_lib/checkstyle/google_checks.xml">
			<fileset dir="src" includes="**/*.java"/>
			<formatter type="xml" toFile="./build/logs/checkstyle_report.xml"/>
		</checkstyle>
	</target>
		
	<target name="jar-ci" depends="compile-ci">
		<jar destfile="./bin/ConnectFour.jar" filesetmanifest="mergewithoutmain">
		 	<manifest>
		 		<attribute name="Main-Class" value="connectfour.App"/>
		 		<attribute name="Class-Path" value="."/>
		  	</manifest>
		  	<fileset dir="./bin"/>
  		</jar>
	</target>
		
	<target name="spotbugs-ci" depends="jar-ci">
		<spotbugs 	home="${spotbugs.home}"
					output="xml"
					outputfile="./build/logs/spotbugs_report.xml"
		>
		<class location="./bin/ConnectFour.jar"/>
		<sourcepath path="./src/connectfour"/>
		</spotbugs>
	</target>
		
	<target name="junit-ci" depends="compile-ci">
		<junitlauncher haltOnFailure="true" printSummary="true">
			<classpath refid="test.classpath"/>
			<testclasses outputdir="build/logs/tests_reports">
                <fileset dir="bin">
                    <include name="test/*Test.class"/>
                </fileset>
                <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
                <listener type="legacy-plain" sendSysOut="true" />
            </testclasses>
		</junitlauncher>
	</target>
		
	<target name="all" depends="clean, init, compile, sonar, checkstyle, pmd, spotbugs, junit"/>
				
	<target name="all-ci" depends="clean-ci, init-ci, compile-ci, sonar-ci, checkstyle-ci, pmd-ci, spotbugs-ci, junit-ci"/>
</project>
